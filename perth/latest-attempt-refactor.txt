set search_path to mimiciii;

with vitals as
(
    select ie.subject_id, ie.hadm_id, ie.icustay_id
    , ceil(extract(EPOCH from ce.charttime - ie.intime)/60.0/60.0) as hr
    , case
      when itemid in (211,220045) and ce.valuenum > 0 and ce.valuenum < 300 then 1 -- heart_rate
      when itemid in (51,442,455,6701,220179,220050) and ce.valuenum > 0 and ce.valuenum < 400 then 2 -- abp_sys
      when itemid in (8368,8440,8441,8555,220180,220051) and ce.valuenum > 0 and ce.valuenum < 300 then 3 -- abp_dia
      when itemid in (456,52,6702,443,220052,220181,225312) and ce.valuenum > 0 and ce.valuenum < 300 then 4 -- abp_mean
      when itemid in (615,618,220210,224690) and ce.valuenum > 0 and ce.valuenum < 70 then 5 -- respiratory_rate
      when itemid in (223761,678) and ce.valuenum > 70 and ce.valuenum < 120  then 6 -- temperature in F
      when itemid in (223762,676) and ce.valuenum > 10 and ce.valuenum < 50  then 6 -- temperature in C
      when itemid in (646,220277) and ce.valuenum > 0 and ce.valuenum <= 100 then 7 -- spo2
      when itemid in (807,811,1529,3745,3744,225664,220621,226537) and ce.valuenum > 0 then 8 -- glucose

      else null end as VitalID
        -- convert F to C
    , case when itemid in (223761,678) then (ce.valuenum-32)/1.8 else ce.valuenum end as valuenum

    from icustays ie
    left join chartevents ce ON ie.icustay_id = ce.icustay_id
    and ce.charttime between ie.intime and ie.intime + interval '1' day
    -- exclude rows marked as error
    and ce.error IS DISTINCT FROM 1
    where ce.itemid in
    (
    -- HEART RATE
    211, --"Heart Rate"
    220045, --"Heart Rate"

    -- Systolic/diastolic

    51, --  Arterial BP [Systolic]
    442, -- Manual BP [Systolic]
    455, -- NBP [Systolic]
    6701, --  Arterial BP #2 [Systolic]
    220179, --  Non Invasive Blood Pressure systolic
    220050, --  Arterial Blood Pressure systolic

    8368, --  Arterial BP [Diastolic]
    8440, --  Manual BP [Diastolic]
    8441, --  NBP [Diastolic]
    8555, --  Arterial BP #2 [Diastolic]
    220180, --  Non Invasive Blood Pressure diastolic
    220051, --  Arterial Blood Pressure diastolic


    -- MEAN ARTERIAL PRESSURE
    456, --"NBP Mean"
    52, --"Arterial BP Mean"
    6702, --  Arterial BP Mean #2
    443, -- Manual BP Mean(calc)
    220052, --"Arterial Blood Pressure mean"
    220181, --"Non Invasive Blood Pressure mean"
    225312, --"ART BP mean"

    -- RESPIRATORY RATE
    618,--  Respiratory Rate
    615,--  Resp Rate (Total)
    220210,-- Respiratory Rate
    224690, --  Respiratory Rate (Total)


    -- SPO2, peripheral
    646, 220277,

    -- GLUCOSE, both lab and fingerstick
    807,--  Fingerstick Glucose
    811,--  Glucose (70-105)
    1529,-- Glucose
    3745,-- BloodGlucose
    3744,-- Blood Glucose
    225664,-- Glucose finger stick
    220621,-- Glucose (serum)
    226537,-- Glucose (whole blood)

    -- TEMPERATURE
    223762, -- "Temperature Celsius"
    676,  -- "Temperature C"
    223761, -- "Temperature Fahrenheit"
    678 --  "Temperature F"

    )
    and ie.icustay_id < 200040
)
, mp_labs_custom as
(
  SELECT le.hadm_id,
              co.subject_id,
              co.icustay_id,
              le.valuenum,
              ceil(date_part('epoch'::text, le.charttime - co.intime) / 60.0::double precision / 60.0::double precision)::smallint AS hr,
                  CASE
                      WHEN le.itemid = 50868 THEN 'ANION GAP'::text
                      WHEN le.itemid = 50862 THEN 'ALBUMIN'::text
                      WHEN le.itemid = 51144 THEN 'BANDS'::text
                      WHEN le.itemid = 50882 THEN 'BICARBONATE'::text
                      WHEN le.itemid = 50885 THEN 'BILIRUBIN'::text
                      WHEN le.itemid = 50912 THEN 'CREATININE'::text
                      WHEN le.itemid = 50902 THEN 'CHLORIDE'::text
                      WHEN le.itemid = 50931 THEN 'GLUCOSE'::text
                      WHEN le.itemid = 51221 THEN 'HEMATOCRIT'::text
                      WHEN le.itemid = 51222 THEN 'HEMOGLOBIN'::text
                      WHEN le.itemid = 50813 THEN 'LACTATE'::text
                      WHEN le.itemid = 51265 THEN 'PLATELET'::text
                      WHEN le.itemid = 50971 THEN 'POTASSIUM'::text
                      WHEN le.itemid = 51275 THEN 'PTT'::text
                      WHEN le.itemid = 51237 THEN 'INR'::text
                      WHEN le.itemid = 51274 THEN 'PT'::text
                      WHEN le.itemid = 50983 THEN 'SODIUM'::text
                      WHEN le.itemid = 51006 THEN 'BUN'::text
                      WHEN le.itemid = 51300 THEN 'WBC'::text
                      WHEN le.itemid = 51301 THEN 'WBC'::text
                      ELSE NULL::text
                  END AS label,
                  CASE
                      WHEN le.itemid = 50862 AND le.valuenum > 10::double precision THEN NULL::double precision
                      WHEN le.itemid = 50868 AND le.valuenum > 10000::double precision THEN NULL::double precision
                      WHEN le.itemid = 51144 AND le.valuenum < 0::double precision THEN NULL::double precision
                      WHEN le.itemid = 51144 AND le.valuenum > 100::double precision THEN NULL::double precision
                      WHEN le.itemid = 50882 AND le.valuenum > 10000::double precision THEN NULL::double precision
                      WHEN le.itemid = 50885 AND le.valuenum > 150::double precision THEN NULL::double precision
                      WHEN le.itemid = 50806 AND le.valuenum > 10000::double precision THEN NULL::double precision
                      WHEN le.itemid = 50902 AND le.valuenum > 10000::double precision THEN NULL::double precision
                      WHEN le.itemid = 50912 AND le.valuenum > 150::double precision THEN NULL::double precision
                      WHEN le.itemid = 50809 AND le.valuenum > 10000::double precision THEN NULL::double precision
                      WHEN le.itemid = 50931 AND le.valuenum > 10000::double precision THEN NULL::double precision
                      WHEN le.itemid = 50810 AND le.valuenum > 100::double precision THEN NULL::double precision
                      WHEN le.itemid = 51221 AND le.valuenum > 100::double precision THEN NULL::double precision
                      WHEN le.itemid = 50811 AND le.valuenum > 50::double precision THEN NULL::double precision
                      WHEN le.itemid = 51222 AND le.valuenum > 50::double precision THEN NULL::double precision
                      WHEN le.itemid = 50813 AND le.valuenum > 50::double precision THEN NULL::double precision
                      WHEN le.itemid = 51265 AND le.valuenum > 10000::double precision THEN NULL::double precision
                      WHEN le.itemid = 50822 AND le.valuenum > 30::double precision THEN NULL::double precision
                      WHEN le.itemid = 50971 AND le.valuenum > 30::double precision THEN NULL::double precision
                      WHEN le.itemid = 51275 AND le.valuenum > 150::double precision THEN NULL::double precision
                      WHEN le.itemid = 51237 AND le.valuenum > 50::double precision THEN NULL::double precision
                      WHEN le.itemid = 51274 AND le.valuenum > 150::double precision THEN NULL::double precision
                      WHEN le.itemid = 50824 AND le.valuenum > 200::double precision THEN NULL::double precision
                      WHEN le.itemid = 50983 AND le.valuenum > 200::double precision THEN NULL::double precision
                      WHEN le.itemid = 51006 AND le.valuenum > 300::double precision THEN NULL::double precision
                      WHEN le.itemid = 51300 AND le.valuenum > 1000::double precision THEN NULL::double precision
                      WHEN le.itemid = 51301 AND le.valuenum > 1000::double precision THEN NULL::double precision
                      ELSE le.valuenum
                  END AS calcnum
             FROM mimiciii.labevents le
               JOIN mimiciii.mp_cohort co ON le.hadm_id = co.hadm_id AND co.excluded = 0
            WHERE (le.itemid = ANY (ARRAY[50868, 50862, 51144, 50882, 50885, 50912, 50902, 50931, 51221, 51222, 50813, 51265, 50971, 51275, 51237, 51274, 50983, 51006, 51301, 51300])) AND le.valuenum IS NOT NULL AND le.valuenum > 0::double precision
)
, inputs_stg as
(
  select ie.icustay_id
    , ceil(extract(EPOCH from iec.charttime - ie.intime)/60.0/60.0) as hr
    , case when itemid in (30018, 30020, 30143, 30160, 30168, 30353, 30352, 30296, 30321, 30186, 30185) then iec.amount else null end as in_saline
    , case when itemid in (30021, 30159) then iec.amount else null end as in_csl
    , case when itemid in (30009, 30008) then iec.amount else null end as in_albumin
    , case when itemid in (30011, 30012) then iec.amount else null end as in_starch

  from icustays ie
  inner join inputevents_cv iec
    on ie.icustay_id = iec.icustay_id
)
, inputs as
(
  SELECT
    icustay_id, hr
    , sum(in_saline) as in_saline
    , sum(in_csl) as in_csl
    , sum(in_albumin) as in_albumin
    , sum(in_starch) as in_starch
  FROM inputs_stg
  group by icustay_id, hr
)
-- Add output
, outputs_stg as
(
  select ie.icustay_id
  , ceil(extract(EPOCH from oe.charttime - ie.intime)/60.0/60.0) as hr
  , case when itemid in (50055, 50056, 50057, 50069, 50085, 50096, 40405, 40428, 40473, 40651, 40715) then oe.value else null end as out_urine
  , oe.value as out_total
  from icustays ie
  inner join outputevents oe
    on ie.icustay_id = oe.icustay_id
)
, outputs as
(
  select icustay_id, hr
  , sum(out_urine) as out_urine
  , sum(out_total) as out_total
  from outputs_stg
  group by icustay_id, hr
)
-- , hourly_cohort as
-- (
--   select
--     subject_id, hadm_id, icustay_id
--   -- create integers for each charttime in hours from admission
--   -- so 0 is admission time, 1 is one hour after admission, etc, up to ICU disch
--   , generate_series
--   (
--     0,
--     ceil(extract(EPOCH from outtime-intime)/60.0/60.0)::INTEGER
--   ) as hr
--   from icustays
-- )
-- now use the cohort to left join to all our data
SELECT
  co.subject_id
, co.hadm_id
, co.icustay_id
, co.hr
, ROW_NUMBER() over (PARTITION BY co.icustay_id ORDER BY co.hr) as rn
, pat.gender

-- Join from icustays
, adm.admittime,
adm.dischtime,
round((date_part('epoch'::text, adm.dischtime - adm.admittime) / (60 * 60 * 24)::double precision)::numeric, 4) AS los_hospital,
round((date_part('epoch'::text, adm.admittime - pat.dob) / ((60 * 60 * 24)::numeric * 365.242)::double precision)::numeric, 4) AS age,
adm.ethnicity,
adm.admission_type,
adm.hospital_expire_flag,
dense_rank() OVER (PARTITION BY co.subject_id ORDER BY adm.admittime) AS hospstay_seq,
CASE
WHEN dense_rank() OVER (PARTITION BY co.subject_id ORDER BY adm.admittime) = 1 THEN 'Y'::text
ELSE 'N'::text
END AS first_hosp_stay,
ie.intime,
ie.outtime,
round((date_part('epoch'::text, ie.outtime - ie.intime) / (60 * 60 * 24)::double precision)::numeric, 4) AS los_icu,
dense_rank() OVER (PARTITION BY co.hadm_id ORDER BY ie.intime) AS icustay_seq,
CASE
WHEN dense_rank() OVER (PARTITION BY co.hadm_id ORDER BY ie.intime) = 1 THEN 'Y'::text
ELSE 'N'::text
END AS first_icu_stay

-- vital signs
, avg(case when VitalID = 1 then pvt.valuenum else null end) as heart_rate
, avg(case when VitalID = 2 then pvt.valuenum else null end) as abp_sys
, avg(case when VitalID = 3 then pvt.valuenum else null end) as abp_dia
, avg(case when VitalID = 4 then pvt.valuenum else null end) as abp_mean
, avg(case when VitalID = 5 then pvt.valuenum else null end) as respiratory_rate
, avg(case when VitalID = 6 then pvt.valuenum else null end) as temperature
, min(case when VitalID = 7 then pvt.valuenum else null end) as spo2
, min(case when VitalID = 8 then pvt.valuenum else null end) as glucose

-- join mp_labs
,
avg(
        CASE
            WHEN mp_labs_custom.label = 'ANION GAP'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS aniongap,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'ALBUMIN'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS albumin,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'BANDS'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS bands,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'BICARBONATE'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS bicarbonate,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'BILIRUBIN'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS bilirubin,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'CREATININE'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS creatinine,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'CHLORIDE'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS chloride,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'GLUCOSE'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS glucose,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'HEMATOCRIT'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS hematocrit,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'HEMOGLOBIN'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS hemoglobin,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'LACTATE'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS lactate,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'PLATELET'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS platelet,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'POTASSIUM'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS potassium,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'PTT'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS ptt,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'INR'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS inr,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'PT'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS pt,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'SODIUM'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS sodium,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'BUN'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS bun,
    avg(
        CASE
            WHEN mp_labs_custom.label = 'WBC'::text THEN mp_labs_custom.valuenum
            ELSE NULL::double precision
        END) AS wbc

from mp_hourly_cohort co
-- all ICUSTAY_IDs are in admissions / patients
-- so we can safely inner join
inner join icustays ie
  on co.icustay_id = ie.icustay_id
inner join admissions adm
  on co.hadm_id = adm.hadm_id
inner join patients pat
  on co.subject_id = pat.subject_id
left join vitals pvt
  on co.icustay_id = pvt.icustay_id
  and co.hr = pvt.hr
left join mp_labs_custom
  on co.icustay_id = mp_labs_custom.icustay_id
  and co.hr = mp_labs_custom.hr
left join inputs inp
  on co.icustay_id = inp.icustay_id
  and co.hr = inp.hr
left join outputs outp
  on co.icustay_id = outp.icustay_id
  and co.hr = outp.hr
group by co.subject_id, co.hadm_id, co.icustay_id, co.hr
, pat.gender, adm.admittime, adm.dischtime, pat.dob, adm.ethnicity
, adm.admission_type, adm.hospital_expire_flag, ie.intime, ie.outtime
order by co.subject_id, co.hadm_id, co.icustay_id, co.hr;
